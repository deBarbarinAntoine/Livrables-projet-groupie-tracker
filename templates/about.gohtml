{{define "staticPath"}}static{{end}}

{{define "title"}}MangaThorg - About{{end}}

{{define "cssFile"}}miscellaneous{{end}}

{{define "page"}}
<div class="about">
    <h1>About</h1>
    <p class="api-link"><a href="https://api.mangadex.org/docs/">MangaDex API documentation</a>.</p>
    <div class="line"></div>

    <h2 id="introduction">Introduction</h2>
    <p>This project is an assignment done for my studies in my first year of computer science. It is a website based on an API named MangaDex. It permits to search, consult and read mangas.</p>
    <p>All resources are available for all users (search and advanced search, manga page and chapter page). Only the favorites feature are for registered users only.</p>
    <p>The mangas available in the website are all in english (title, description, scans) and SFW (contentRating[]=safe).</p>
    <div class="line"></div>

    <h2 id="installation">Installation</h2>
    <p>To set the server up on your own computer, you can use one of those two options:</p>
    <hr>
    <h3 id="-from-the-release-version-windows-users-only-">+ From the Release version (Windows users only)</h3>
    <p>Click on <code>MangaThorg v1.0</code> below the <code>Release</code> option and then on the <code>.exe</code> file to download it.</p>
    <p>Then you can just execute the downloaded executable.</p>
    <hr>
    <h3 id="-from-the-source-code">+ From the source code</h3>
    <p><strong>REQUIREMENT: you need Golang v1.22 or superior to be able to run this source code.</strong></p>
    <p>Click on <code>&lt;&gt; Code</code> and then on <code>Download ZIP</code>.</p>
    <p>Unzip the downloaded file.</p>
    <h4 id="warning-you-need-a-config-folder-to-run-the-program-properly">WARNING: you need a config folder to run the program properly</h4>
    <ul>
        <li>Create a folder named <code>config</code> at the root of the project (at the same level as <code>assets</code>, <code>cache</code> or <code>cmd</code>).</li>
        <li>Create a JSON file named <code>config.json</code> inside the new <code>config</code> folder.</li>
        <li>In <code>config.json</code>, you need to put an object of this type:<pre><div class="lang-json">{
<span class="hljs-attr">"email_addr"</span>: <span class="hljs-string">"&lt;your-email-address&gt;"</span>,
<span class="hljs-attr">"email_auth"</span>: <span class="hljs-string">"&lt;your-email-password&gt;"</span>,
<span class="hljs-attr">"host"</span>: <span class="hljs-string">"&lt;your-email-smtp-hostname&gt;"</span>,
<span class="hljs-attr">"port"</span>: <span class="hljs-number">465</span> // your-email-smtp-port
}
</div></pre>
        </li>
    </ul>
    <p>Fill the mail parameters in <code>config.json</code>, otherwise, the program will bug whenever it needs to send a mail (register and forgot password options).</p>
    <div class="line"></div>

    <h2 id="routes">Routes</h2>
    <ul>
        <li><strong>GET /{$}</strong>: root (redirects to <strong>/principal</strong>).</li>
    </ul>
    <ul>
        <li><strong>GET /login</strong>: displays the login form.</li>
        <li><strong>POST /login</strong>: login treatment (no display).</li>
    </ul>
    <ul>
        <li><strong>GET /register</strong>: displays the register form.</li>
        <li><strong>POST /register</strong>: register treatment (no display).</li>
    </ul>
    <ul>
        <li><strong>GET /forgot-password</strong>: displays the forgot password form.</li>
        <li><strong>POST /forgot-password</strong>: forgot password treatment (no display).</li>
    </ul>
    <ul>
        <li><strong>GET /update-credentials</strong>: displays the update credentials form (takes the id sent by mail as a GET query: <code>?id={id}</code>.</li>
        <li><strong>POST /update-credentials/{id}</strong>: update credentials treatment (no display). Takes the id sent by mail as the <code>{id}</code>.</li>
    </ul>
    <ul>
        <li><strong>GET /profile</strong>: displays the profile form (to modify the user&#39;s avatar or/and password).</li>
        <li><strong>POST /profile</strong>: profile treatment (no display).</li>
    </ul>
    <ul>
        <li><strong>GET /home</strong>: displays the home page (user only) with all his favorites.</li>
        <li><strong>GET /confirm</strong>: displays the mail confirm page (corresponds to the link sent to confirm the account just created).</li>
        <li><strong>GET /logout</strong>: log the user out (no display and user only).</li>
        <li><strong>GET /principal</strong>: displays the principal page.</li>
        <li><strong>GET /manga/{id}</strong>: displays the manga page according to the id specified in the URL.</li>
        <li><strong>GET /categories</strong>: displays the categories page.</li>
        <li><strong>GET /category/{tagId}</strong>: displays the category page according to a specific tag (which id is specified in the URL).</li>
        <li><strong>GET /category/{group}/{name}</strong>: displays the category page according to a specific name in a specific group (used for public and format tags).</li>
        <li><strong>GET /search</strong>: displays the search page and the results according to the query params.</li>
        <li><strong>GET /chapter/{mangaId}/{offset}/{chapterId}</strong>: displays a chapter according to a mangaId, an offset and a chapterId.</li>
    </ul>
    <ul>
        <li><strong>GET /covers/{manga}/{img}</strong>: used to display images in the pages (cover image proxy).</li>
        <li><strong>GET /scan/{chapterId}/{quality}/{hash}/{img}</strong>: used to display scan images in the pages (scan image proxy).</li>
        <li><strong>POST /favorite/{mangaId}</strong>: adds a favorite to a user (no display and user only).</li>
        <li><strong>DELETE /favorite/{mangaId}</strong>: removes a favorite from a user (no display and user only).</li>
        <li><strong>PUT /favorite/{mangaId}</strong>: modifies the custom user banner (no display and user only).</li>
    </ul>
    <ul>
        <li><strong>GET /logs</strong>: (<em>Testing handler</em>) sends the logs in JSON format. Accepts a filter with <code>?level={info, warn, error}</code> (one of the three, optional).</li>
    </ul>
    <div class="line"></div>

    <h2 id="endpoints">Endpoints</h2>
    <h3 id="search-endpoint-">Search endpoint:</h3>
    <p><a href="https://api.mangadex.org/manga">https://api.mangadex.org/manga</a></p>
    <p><img src="https://github.com/deBarbarinAntoine/Livrables-projet-groupie-tracker/blob/main/img_readme/search-endpoint.png?raw=true" alt="alt text"></p>
    <p>With this endpoint, any kind of advanced search is possible:</p>
    <ul>
        <li>by title (title= :title)</li>
        <li>by including tags (includedTags[]= :ids)</li>
        <li>by excluding tags (excludedTags[]= :ids)</li>
        <li>by status (status[]= :status)</li>
        <li>by targeted public (publicationDemographic[]= :targetType)</li>
    </ul>
    <hr>
    <h3 id="get-manga-s-cover-endpoint-">get manga’s cover endpoint:</h3>
    <p><a href="https://api.mangadex.org/cover/:cover-id">https://api.mangadex.org/cover/:cover-id</a></p>
    <p><img src="https://github.com/deBarbarinAntoine/Livrables-projet-groupie-tracker/blob/main/img_readme/cover-endpoint.png?raw=true" alt="alt text"></p>
    <hr>
    <h3 id="get-chapter-id-list-endpoint-">get chapter id list endpoint:</h3>
    <p><a href="https://api.mangadex.org/manga/:manga-id/feed">https://api.mangadex.org/manga/:manga-id/feed</a></p>
    <p><img src="https://github.com/deBarbarinAntoine/Livrables-projet-groupie-tracker/blob/main/img_readme/list-chapter-id-endpoint.png?raw=true" alt="alt text"></p>
    <hr>
    <h3 id="get-chapter-images-endpoint-">get chapter images endpoint:</h3>
    <p><a href="https://api.mangadex.org/at-home/server/:chapter-id">https://api.mangadex.org/at-home/server/:chapter-id</a></p>
    <p><img src="https://github.com/deBarbarinAntoine/Livrables-projet-groupie-tracker/blob/main/img_readme/chapter-imgs-endpoint.png?raw=true" alt="alt text"></p>
    <hr>
    <h3 id="get-tag-list-enpoint-">get tag list enpoint:</h3>
    <p><a href="https://api.mangadex.org/manga/tag">https://api.mangadex.org/manga/tag</a></p>
    <p><img src="https://github.com/deBarbarinAntoine/Livrables-projet-groupie-tracker/blob/main/img_readme/tag-endpoint.png?raw=true" alt="alt text"></p>
    <hr>
    <h2 id="category-page-">Category page:</h2>
    <p>Tags, status and targeted public will be available categories.</p>
    <hr>
    <h2 id="favorites-">Favorites:</h2>
    <p>The favorites will be a personal list of mangas’ ids and/or chapters’ ids.</p>
</div>
{{end}}